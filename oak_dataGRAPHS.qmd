---
title: "oak_data_EDA"
author: "Kelsey Hauf"
format: html
editor: visual
---

# Load Libraries + Data

```{r}
#load libaraies test
library(tidyverse)
library(dplyr)
library(lattice)
library(nlme)
library(car)
library(ggplot2)
install.packages("DT")
library(DT)
library(GGally)
library(scatterplot3d)
library(ggpubr)  
library(broom.mixed)
library(lme4)
library(emmeans)
library(lmerTest)
library(stringr)



```

## Cleaning function

```{r}
# Create a function to clean seasonal data

clean_seasonal_data <- function(df) {
  df <- df |>
    select(-matches("Data Enterer|Notes|Page|Date|QAQC")) |>
    rename(
      Block = "Block Number",
      Tag = "Tag Number",
      LifeStage = "Acorn or seedling?",
      Height = matches("Seedling Height"),
      GerminatedAcorns = "Number of Acorns That Germinated",
      Leaves = "# Leaves on Seedling",
      Salvia = "Is Salvia apiana alive"
    ) #|>
    # New condition for Missing Salvia
   # mutate(
    #  Treatment = case_when(
      #  Salvia == "Missing" ~ "OA",
     #  TRUE ~ Treatment
    #  )
   # )
  
  
  # Only rename "Acorn #" if it exists
  if ("Acorn #" %in% names(df)) {
    df <- df |> rename(Acorntag = "Acorn #")
  }
  
  # Conditionally convert columns to numeric if they exist
  num_cols <- c("Block", "Height", "GerminatedAcorns", "Leaves", "Acorntag")
  for (col in num_cols) {
    if (col %in% names(df)) {
      df[[col]] <- as.numeric(df[[col]])
    }
  }
  
  df
}
```

## Load + Clean Oak Data

```{r}
# Initial data
initial_size <- read_csv('Oak_Seedlings_Initial_size.csv') |>
  select(-Page)

# Seasonal data (applies cleaning function)
spring24 <- read_csv('2024 Spring Seedling & Acorn Height and Survival ORPOY - Spring Data.csv') |> clean_seasonal_data()
summer24 <- read_csv('2024 Summer Seedling & Acorn Height and Survival ORPOY.xlsx - Summer Data.csv') |> clean_seasonal_data()
fall24 <- read_csv('2024 Fall Seedling & Acorn Height and Survival ORPOY - Sheet1.csv') |> clean_seasonal_data() 
winter25 <- read_csv('2025 Winter Seedling & Acorn Height and Survival ORPOY - Sheet1.csv') |> clean_seasonal_data()
spring25 <- read_csv('2025 Spring Seedling & Acorn Height and Survival ORPOY - Sheet1.csv') |> clean_seasonal_data()

#----------------------------------------------------------------------

# Remove duplicate tags keeping first occurrence across all treatments
deduplicated_data <- winter25 %>%
  arrange(Tag) %>%  # Ensure chronological order
  group_by(Tag) %>%
  slice(1) %>%  # Keep first occurrence of each tag
  ungroup()

# Verify treatment counts per block
treatment_counts <- deduplicated_data %>%
 # filter(Treatment != "SA") %>%  # Exclude SA if needed
  count(Block, Treatment) %>%
  filter(n != 6)  # Flag blocks needing adjustment

# View problematic blocks
print(treatment_counts)

# Final cleaned data
dupe_data <- deduplicated_data %>%
  group_by(Block, Treatment) %>%
  mutate(Valid = n() == 6) %>%  # Mark valid treatment-block groups
  ungroup()









# Count how many rows had Salvia == "Missing" (these were converted to OA)
num_converted <- dupe_data %>% filter(Salvia == "Missing") %>% nrow()

# Count how many rows currently have Treatment == "OA"
num_oa <- dupe_data %>% filter(Treatment == "OA") %>% nrow()

cat("Number of Salvia == 'Missing' converted to OA:", num_converted, "\n")
cat("Total number of OA entries now in winter25:", num_oa, "\n")



# Soil moisture data (create unified processing)
process_sm_data <- function(df, season_name) {
  df |>
    mutate(
      across(c(VWC1, VWC2, VWC3, PER1, PER2, PER3), as.numeric), # Convert ALL numeric columns
      MeanVWC = rowMeans(across(starts_with("VWC")), na.rm = TRUE),
      Season = season_name
    )
}

# load in soil moisure data
springSM <- read_csv('SpringSoilMoistureORPOY.csv') |> process_sm_data("Spring24")
fallSM <- read_csv('2024 Fall Soil Moisture ORPOY - Sheet1.csv') |> process_sm_data("Fall24")
winter25SM <- read_csv('2025 Winter Soil Moisture ORPOY - Sheet1.csv') |> process_sm_data("Winter25")
spring25SM <- read_csv('2025 Spring Soil Moisture ORPOY - Sheet1.csv') |> process_sm_data("Spring25")


```

## Merged Datasets

```{r}

#all of it together 
seasonal_data <- bind_rows(
  spring24 |> mutate(Season = "Spring24"),
  summer24 |> mutate(Season = "Summer24"),
  fall24 |> mutate(Season = "Fall24"),
  winter25 |> mutate(Season = "Winter25"),
  spring25 |> mutate(Season = "Spring25")
)


# Height data across seasons
height_data <- list(
  Initial24 = initial_size, Spring24 = spring24, 
  Summer24 = summer24, Fall24 = fall24, 
  Winter25 = winter25, Spring25 = spring25
) |>
  map_dfr(
    ~ .x |> 
      filter(Treatment != "NR") |>
      select(Tag, Treatment, Height, Block, LifeStage),
    .id = "Season"
  ) |>
  mutate(Season = factor(Season, levels = c("Initial24", "Spring24", 
                                            "Summer24", "Fall24", "Winter25", "Spring25")))


# Soil moisture unified dataset
all_sm <- bind_rows(springSM, fallSM, winter25SM, spring25SM) |>
  mutate(Treatment = as.factor(Treatment), Block = as.factor(Block))

# leaf count data across seasons
leaf_data <- bind_rows(
  spring24 |> mutate(Season = "Spring24"),
  summer24 |> mutate(Season = "Summer24"),
  fall24 |> mutate(Season = "Fall24"),
  winter25 |> mutate(Season = "Winter25"),
  spring25 |> mutate(Season = "Spring25")
) |>
  filter(Treatment != "NR", Height > 1, Leaves > 1) |>
  select(Tag, Treatment, Leaves, Block, Season)


```

## Survival Data

## Number of Living Seedlings by Treatment and Block

```{r}

# Count living seedlings by treatment
seedling_counts <- winter25 |>
  filter(LifeStage == "Seedling", Height > 1, Leaves > 1) |>
  count(Treatment)

# Calculate total seedlings and alive seedlings
total_seedlings <- winter25 |>
  filter(LifeStage == "Seedling") |>
  nrow()
alive_seedlings <- sum(seedling_counts$n)

label_names <- c(
  "AC" = "Adult Canopy",
  "DT" = "Downed Tree",
  "OA" = "Open Area",
  "SA" = "Salvia apiana")

ggplot(seedling_counts, aes(x = Treatment, y = n, fill = Treatment)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(limits = c(0, 9)) +
  geom_text(aes(label = n), vjust = -0.5, size = 4) + 
  scale_x_discrete(labels = label_names) +
  scale_fill_manual(
    values = c(
      "AC" = "darkgreen",
      "DT" = "purple",
      "OA" = "orange",
      "SA" = "hotpink"
    )
  ) +
  labs(
    title = "Number of Living Seedlings by Treatment",
    x = "Treatment",
    y = "Number of Living Seedlings",
    fill = "Treatment",
    caption = paste("Total seedlings planted: ", total_seedlings, 
                    "\nSurvived: ", alive_seedlings)
  ) +
  theme_minimal()

#---------------------------------------------------------------------------------------------

# Count living seedlings per block 
seedling_counts <- alive_seedlings |>
  count(Block)

# Create a bar graph showing living seedlings per block
ggplot(seedling_counts, aes(x = Block, y = n)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Number of Living Seedlings in Fall 2024",
    x = "Block",
    y = "Number of Living Seedlings"
  ) 


# Print the results
cat("Total number of seedlings: 96", "\n")
cat("Number of alive seedlings:", alive_seedlings, "\n")


#---------------------------------------------------------------------------------------------

# Count living seedlings by block and treatment
living_seedlings_by_treatment <- winter25 |>
  filter(LifeStage == "Seedling", Height > 1, Leaves > 1) |>
  count(Block, Treatment)

# Create a faceted bar graph
ggplot(living_seedlings_by_treatment, aes(x = Treatment, y = n, fill = Treatment)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~ Block) +
  labs(
    title = "Number of Living Seedlings by Treatment and Block",
    x = "Treatment",
    y = "Number of Living Seedlings",
    fill = "Treatment",
    caption = paste("Total seedlings that survived across all blocks:", alive_seedlings, "\n",
      "Out of: 96")
   
  ) 


```

## Acorn Survival Analysis

```{r}

#number of acorns that have germinated total 

# Filter for acorns and find the maximum germinated acorns per tag
max_germinated_acorns <- seasonal_data |>
  filter(LifeStage == "Acorn") |>
  group_by(Tag, Treatment, Block) |>
  summarise(
    # Use pmax with 0 to ensure we never get -Inf
    MaxGerminated = max(c(0, GerminatedAcorns), na.rm = TRUE),
    .groups = "drop"
  )

max_germinated_acorns <- max_germinated_acorns |> 
  filter(!is.na(Block))


# Count the total maximum germinated acorns by treatment
germinated_by_treatment <- max_germinated_acorns |>
  group_by(Treatment) |>
  summarise(Total_Germinated = sum(MaxGerminated, na.rm = TRUE))

# Create the visualization
ggplot(germinated_by_treatment, aes(x = Treatment, y = Total_Germinated, fill = Treatment)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = Total_Germinated), vjust = -0.5, size = 4) +
  scale_y_continuous(limits = c(0, 50)) + 
  scale_fill_manual(
    values = c(
      "AC" = "darkgreen",
      "DT" = "purple",
      "OA" = "orange",
      "SA" = "hotpink"
    )
  ) +
  scale_x_discrete(labels = label_names) +
  labs(
    title = "Maximum Number of Germinated Acorns \nby Treatment",
    x = "Treatment",
    y = "Number of Germinated Acorns",
    fill = "Treatment",
    caption = paste("Total acorns germinated:", sum(germinated_by_treatment$Total_Germinated),
                    "\nAcorns planted: 288")
  ) +
  theme_minimal()


#----------------------------------------------------------------------------------------------


# number of living germinated acorns using the most recent data 


# Filter for living acorns (Height > 1 and Leaves > 1)
living_acorns <- winter25 |>
  filter(LifeStage == "Acorn", Height > 1, Leaves > 1)

# Summarize living acorns by treatment
living_acorn_counts <- living_acorns |>
  group_by(Treatment) |>
  summarise(Total_Living_Acorns = n())

# Plot: Number of living acorns by treatment
ggplot(living_acorn_counts, aes(x = Treatment, y = Total_Living_Acorns, fill = Treatment)) +
  geom_bar(stat = "identity") +
  scale_y_continuous(limits = c(0, 30)) + 
  scale_fill_manual(
    values = c(
     "AC" = "darkgreen",
      "DT" = "purple",
      "OA" = "orange",
      "SA" = "hotpink"
    )
  ) +# Set y-axis from 0 to 10
  scale_x_discrete(labels = label_names) +
  geom_text(aes(label = Total_Living_Acorns), vjust = -0.5, size = 4) + # Add text labels above bars
  labs(
    title = "Number of Living Acorns by Treatment",
    x = "Treatment",
    y = "Total Living Acorns",
    fill = "Treatment"
  ) +
  theme_minimal()



#--------------------------------------------------------------------------

#total number of germinations by block 




```

## Height

```{r}

#graph that compares the overall heights

height_data |>

  ggplot() +
  aes(x = Season , y = Height, fill = Season) +
  geom_col(position = position_dodge())

# remember there is an extreme outlier in the 8th block where 1 plant had over 50 cm of growth 

#----------------------------------------------------------

# graph that compares the change in heights by treatment

height_data |>

  ggplot() +
  aes(x = Treatment , y = Height, fill = Season) +
  labs(x = "Treatment", y = "Height", fill = "Season") +  # Add labels
  geom_col(position = position_dodge())

#---------------------------------------------------------------

# graph that compares the change in heights by block

height_data |>

  ggplot() +
  aes(x = Block , y = Height, fill = Season) +
  labs(x = "Block", y = "Height", fill = "Season") +  # Add labels
  geom_col(position = position_dodge())
```

## Growth Analysis

calculate and compare the growth rates between the seasons

```{r}


growth_rates <- height_data |>
  pivot_wider(names_from = Season, values_from = Height) |>
  mutate(
    Growth_Initial_to_Spring = (Spring24 - Initial24)/Initial24,
    Growth_Spring_to_Summer = (Summer24 - Spring24)/Spring24,
    Growth_Summer_to_Fall = (Fall24 - Summer24)/Summer24,
    Growth_Fall_to_Winter = (Winter25 - Fall24)/Fall24
  ) |>
  # Handle division by zero
  mutate(across(starts_with("Growth"), 
               ~ ifelse(is.infinite(.), NA, .)))

## ---------------------------
## Visualization (All Seasons)
## ---------------------------
growth_rates |>
  pivot_longer(
    cols = starts_with("Growth"),
    names_to = "Period",
    values_to = "Rate"
  ) |>
  ggplot(aes(Treatment, Rate, fill = Period)) +
  geom_boxplot() +
  labs(
    title = "Growth Rates Across All Seasons",
    subtitle = "Relative growth between data collection periods",
    y = "Relative Growth Rate"
  ) +
  theme_minimal()
```

### Statistical test

Determine if growth rates differ significantly between treatments

```{r}
#remove any NAs
growth_rates <- growth_rates |>
  filter(!is.na(Growth_Rate) & is.finite(Growth_Rate))

#ANOVA for treatments
anova_result <- aov(Growth_Rate ~ Treatment, data = growth_rates)
summary(anova_result)

#as of 11/21 The treatments did not significantly affect growth rates.
#as of 1/23 The treatments did not significantly affect growth rates.


```

### **Temporal Analysis**

Analyze how growth rates evolve over time and compare between treatments.

```{r}
# Seasonal trajectory visualization
height_data |>
  group_by(Treatment, Season) |>
  summarise(Mean_Height = mean(Height, na.rm = TRUE)) |>
  ggplot(aes(Season, Mean_Height, color = Treatment, group = Treatment)) +
  geom_point(size = 3) +
  geom_line(linewidth = 1) +
  labs(title = "Height Trajectory by Treatment") +
  theme_minimal()

# do any of the treatments significantly effect growth rate with block as a random effect 
library(lme4)
growth_model <- lmer(Height ~ Treatment * Season + (1|Block), data = height_data)
summary(growth_model)


# which treatments differ significantly within each season
# Pairwise seasonal comparisons
emmeans::emmeans(growth_model, pairwise ~ Treatment | Season)

```

### Environmental drivers of growth rate

```{r}
# Temperature effects
hobo_data <- readRDS("HOBOData24.rds") 

temp_growth_data <- growth_rates |> 
  left_join(
    hobo_data |> 
      group_by(Treatment) |> 
      summarise(Avg_Temp = mean(Temp, na.rm = TRUE)),
    by = c("Treatment")
  )

# Analyze all growth periods simultaneously
temp_growth_data |>
  pivot_longer(
    cols = starts_with("Growth"),
    names_to = "Period",
    values_to = "Rate"
  ) |>
  group_by(Period) |>
  group_modify(~ {
    broom::tidy(
      lm(Rate ~ Avg_Temp, data = .x)
    )
  }) |>
  filter(term == "Avg_Temp") |>
  select(Period, estimate, p.value) |>
  mutate(
    Significance = ifelse(p.value < 0.05, "p < 0.05", "NS"),
    Effect = paste0(round(estimate*100, 1), "%/°C")
  )


#----------------------------------------------------------------------------

# soil moisture effects on growth rate 

growth_long <- growth_rates |>
  pivot_longer(
    cols = starts_with("Growth"),
    names_to = "Period",
    values_to = "GrowthRate"
  ) |>
  mutate(Season = str_remove(Period, "Growth_")) |>
  filter(is.finite(GrowthRate))


analysis_data <- growth_long |>
  left_join(all_sm, by = c("Block", "Treatment")) |>
  drop_na(MeanVWC)

model <- lmer(GrowthRate ~ MeanVWC + (1|Block), data = analysis_data)
summary(model)


```

Now lets see if soil moisture has an effect on growth rate

```{r}

all_sm |>

# Convert Block to numeric first

mutate(Block = as.numeric(as.character(Block))) |>

group_by(Block, Treatment) |>

summarise(MeanVWC = mean(MeanVWC), .groups = "drop") |> # Add .groups to suppress message

left_join(growth_rates, by = c("Block", "Treatment")) |>

ggplot(aes(MeanVWC, Growth_Spring24, color = Treatment)) +

geom_point() +

geom_smooth(method = "lm")

# Linear regression to assess the relationship

model <- lm(growth_rates ~ MeanVWC, data = all_sm)

summary(model)


```

long story short soil moisture does not have an effect on growth rate womp womp

## Leaf Data

### Initial Leaf Count EDA

First we want to prove statistically if there is a relationship between leaf count and height

```{r}

# Log-transform Height and Leaves
initial_size <- initial_size |>
  mutate(
    lnHeight = log(Height + 1),
    lnLeaves = log(Leaves + 1)
  )

# Linear model to test relationship
height_vs_leaves_lm <- lm(lnHeight ~ lnLeaves, data = initial_size)
summary(height_vs_leaves_lm)

# Diagnostic plots
par(mfrow = c(2, 2))
plot(height_vs_leaves_lm)



```

There is a relationship which is great!

## Environmental drivers for leaf count

```{r}

# 1. Process soil moisture data (without calculating temperature)
soil_data <- bind_rows(
  springSM |> mutate(Season = "Spring24"),
  fallSM |> mutate(Season = "Fall24"),
  winter25SM |> mutate(Season = "Winter25")
) |>
  group_by(Block, Treatment, Season) |>
  summarise(
    MeanVWC = mean(c(VWC1, VWC2, VWC3), na.rm = TRUE),
    .groups = "drop"
  )

# 2. Process temperature data (ensure it has Season information)
temp_data <- HOBOData24 |>
  # Add season based on date ranges (adjust these as needed for your data)
  mutate(Season = case_when(
    between(as.Date(Date), as.Date("2024-03-01"), as.Date("2024-05-31")) ~ "Spring24",
    between(as.Date(Date), as.Date("2024-06-01"), as.Date("2024-08-31")) ~ "Summer24",
    between(as.Date(Date), as.Date("2024-09-01"), as.Date("2024-11-30")) ~ "Fall24",
    between(as.Date(Date), as.Date("2024-12-01"), as.Date("2025-02-28")) ~ "Winter25",
    TRUE ~ NA_character_
  )) |>
  group_by(Block, Treatment, Season) |>
  summarise(Avg_Temp = mean(Temp, na.rm = TRUE), .groups = "drop")

# 3. Merge soil moisture and temperature data
temp_soil_data <- left_join(soil_data, temp_data, by = c("Block", "Treatment", "Season"))


leaf_analysis_data <- leaf_data |>
  left_join(temp_soil_data, by = c("Block", "Treatment", "Season"))

# Fit linear model to test effects on leaf development
leaf_model <- lm(Leaves ~ Treatment + Avg_Temp + MeanVWC, data = leaf_analysis_data)
summary(leaf_model)

# Option 1: Use a no-intercept model
leaf_model_no_intercept <- lm(Leaves ~ 0 + Treatment + Avg_Temp + MeanVWC, 
                             data = leaf_analysis_data)
summary(leaf_model_no_intercept)

```

all environmental drivers had an effect but what kind of effect and how much

```{r}
#Calculate Change in Leaf Counts
# Pivot wider to calculate differences between seasons
leaf_data_wide <- seedling_leaf_data |>
  pivot_wider(names_from = Season, values_from = Leaves)

# Calculate change in leaf counts between consecutive seasons
leaf_data_wide <- leaf_data_wide |>
  mutate(
    Change_Spring_to_Summer = Summer24 - Spring24,
    Change_Summer_to_Fall = Fall24 - Summer24,
    Change_Fall_to_Winter = Winter25 - Fall24
  )

# Pivot longer for visualization and statistical analysis
leaf_change_data <- leaf_data_wide |>
  select(Tag, Treatment, Block, Change_Spring_to_Summer, Change_Summer_to_Fall, Change_Fall_to_Winter) |>
  pivot_longer(
    cols = starts_with("Change"),
    names_to = "Period",
    values_to = "Leaf_Change"
  )

# Filter out NA values and classify changes
leaf_change_data_clean <- leaf_change_data |>
  filter(!is.na(Leaf_Change)) |>
  mutate(Change_Type = ifelse(Leaf_Change >= 0, "Positive", "Negative"))

# Summarize counts of positive and negative changes by treatment
leaf_change_summary <- leaf_change_data_clean |>
  group_by(Treatment, Change_Type) |>
  summarise(Count = n(), .groups = "drop")

# Summarize counts of positive and negative changes by treatment
leaf_change_summary <- leaf_change_data_clean |>
  group_by(Treatment, Change_Type) |>
  summarise(Count = n(), .groups = "drop")

#-----------------------------------------------------

#Bar Plot of Positive vs Negative Changes
leaf_change_data_clean |>
  mutate(Change_Type = ifelse(Leaf_Change >= 0, "Positive", "Negative")) |>
  ggplot(aes(x = Period, fill = Change_Type)) +
  geom_bar(position = "dodge") +
  labs(
    title = "Positive vs Negative Leaf Count Changes Across Seasons",
    x = "Period",
    y = "Number of Seedlings",
    fill = "Change Type"
  ) +
  theme_minimal()


# Create bar graph
ggplot(leaf_change_summary, aes(x = Treatment, y = Count, fill = Change_Type)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(
    title = "Positive vs Negative Leaf Count Changes by Treatment",
    x = "Treatment",
    y = "Number of Changes",
    fill = "Change Type"
  ) +
  theme_minimal()


#------------------------------------------------------------

#Box Plot of Leaf Count Changes by Treatment
ggplot(leaf_change_data_clean, aes(x = Treatment, y = Leaf_Change, fill = Period)) +
  geom_boxplot() +
  labs(
    title = "Leaf Count Changes by Treatment",
    x = "Treatment",
    y = "Change in Leaf Count"
  ) +
  theme_minimal()



```

## Soil Moisture

```{r}

# Create the bar plot showing mean vwc in each treatment 

ggplot(all_sm, aes(x = Treatment, y = MeanVWC, fill = Season)) +
  
  stat_summary(fun.y = mean, 
               geom = "bar", 
               position = position_dodge()) +
  
  stat_summary(fun.data = mean_se, 
               geom = "errorbar", 
               position = position_dodge(), 
               width = 0.2) +
  labs(
    title = "Mean Volumetric Water Content by Treatment and Season",
    x = "Treatment",
    y = "Mean Volumetric Water Content",
    fill = "Season"
  ) +
  theme_minimal()


#reminder that it started raining halfway through taking winter25 measurements +
#there was a rain event before spring 24 data collection

#----------------------------------------------------------------------------

#now for the blocks 
ggplot(all_sm, aes(x = Block, y = MeanVWC, fill = Season)) +
  stat_summary(fun.y = mean, geom = "bar", position = position_dodge()) +
  stat_summary(fun.data = mean_se, geom = "errorbar", position = position_dodge(), width = 0.2) +
  labs(
    title = "Mean Volumetric Water Content by Block and Season",
    x = "Block",
    y = "Mean Volumetric Water Content",
    fill = "Season"
  ) +
  theme_minimal()

#----------------------------------------------------------------------------


# Q-Q Plot for Normality
ggqqplot(all_sm$MeanVWC)

# Shapiro-Wilk Test for Normality
shapiro_test <- shapiro.test(all_sm$MeanVWC)
print(shapiro_test)

# Levene's Test for Homogeneity of Variances
levene_test <- car::leveneTest(MeanVWC ~ Treatment, data = all_sm)
print(levene_test)


#ANOVA to Test Differences in MeanVWC Across Treatments
anova_result <- aov(MeanVWC ~ Treatment + Season + Block, data = all_sm)
summary(anova_result)



#----------------------------------------------------------------------------
#data is not very normal

# Log-transform MeanVWC columns
all_sm_log <- all_sm |>
  mutate(MeanVWC_Log = log1p(MeanVWC))

# Box Plot: Log-Transformed Mean VWC by Treatment and Season
ggplot(all_sm_log, aes(x = Treatment, y = MeanVWC_Log, fill = Season)) +
  geom_boxplot() +
  labs(
    title = "Log-Transformed Mean Volumetric Water Content by Treatment and Season",
    x = "Treatment",
    y = "Log-Transformed Mean Volumetric Water Content",
    fill = "Season"
  ) +
  theme_minimal()
```

Box Plot for Mean VWC by treatment and season

In summery there must have been a rain event or something near when the SM data was collected for Spring 2024

## Germination

### Germination rate

```{r}

# Filter out the NR treatment
germination_data <- germination_data |>
  filter(Treatment != "NR")

# Add Total_Seeds_Planted column and calculate germination rates
germination_data <- germination_data |>
  
  mutate(
    Total_Acorns_Planted = 288,
    Germination_Rate = GerminatedAcorns / Total_Acorns_Planted
  )

# Summarize germination rates by Block, Treatment, and Season
germination_rate_summary <- germination_data |>
  group_by(Block, Treatment, Season) |>
  summarise(
    Avg_Germination_Rate = mean(Germination_Rate, na.rm = TRUE),
    .groups = "drop"
  )

# Print summary
print(germination_rate_summary)

#----------------------------------------------------------------------------


# Boxplot of germination rates by treatment and season
germination_data |>
  ggplot(aes(x = Treatment, y = Germination_Rate, fill = Season)) +
  geom_boxplot() +
  facet_wrap(~ Block) +
  labs(
    title = "Germination Rate by Treatment and Block",
    x = "Treatment",
    y = "Germination Rate"
  ) +
  theme_minimal()
```

### Statistical Analysis

#### Effect of Treatment, Block, and Temperature on Germination Rate

```{r}

# Convert Block to factor in both datasets
germination_data <- germination_data |> 
  mutate(Block = factor(Block))

HOBOData24 <- HOBOData24 |> 
  mutate(Block = factor(Block))

# Merge datasets
germination_temp_data <- germination_data |>
  left_join(
    HOBOData24 |> 
      group_by(Block, Treatment) |> 
      summarise(Avg_Temperature = mean(Temp, na.rm = TRUE), .groups = "drop"),
    by = c("Block", "Treatment")
  )

# Mixed-effects model
germination_model <- lmer(
  Germination_Rate ~ 0 + Treatment + Avg_Temperature + (1 | Block),
  data = germination_temp_data
)

# Model summary
summary(germination_model)

# Significance tests for fixed effects
anova(germination_model)

# Post-hoc pairwise comparisons for treatments
emmeans(germination_model, pairwise ~ Treatment) |> 
  summary(infer = TRUE)

```

#### Soil Moisture effect on germination rate

```{r}

# Merge soil moisture data with germination data (filtering out NR treatment)
germ_moist_data <- germination_data |> 
  filter(Treatment != "NR") |> 
  left_join(all_sm, by = c("Treatment", "Season"))



ggplot(germ_moist_data, aes(x = MeanVWC, y = Germination_Rate, color = Treatment)) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    title = "Effect of Soil Moisture on Germination Rate",
    x = "Mean Volumetric Water Content (Soil Moisture)",
    y = "Germination Rate"
  ) +
  theme_minimal()

germ_moist_clean$Treatment <- as.numeric(germ_moist_clean$Treatment)


# Scatter plot of MeanVWC vs Germination Rate
ggplot(germ_moist_clean, aes(x = MeanVWC, y = Germination_Rate, color = Treatment)) +
  geom_point(size = 3) +
  geom_smooth(
    method = "lm", 
    se = FALSE,
    formula = y ~ x,
    na.rm = TRUE  # Add na.rm to handle any remaining missing values
  ) +
  labs(
    title = "Effect of Soil Moisture on Germination Rate",
    x = "Mean Volumetric Water Content (Soil Moisture)",
    y = "Germination Rate"
  ) +
  theme_minimal()

# Modified linear model with error handling
lm_germ_moisture <- lm(
  Germination_Rate ~ MeanVWC + Treatment + Block,
  data = germ_moist_clean,
  na.action = na.omit  # Explicitly handle missing values
)

# Model summary
summary(lm_germ_moisture)
```

## Soil / Bulk Density

Load Data + Prep

```{r}
# Load raw soil measurements data
BDA <- read_csv('OAKS 24-25 Bulk Density Raw Data - Sheet1.csv')
  
# Data cleaning and preparation
BDA_clean <- BDA %>%
  # Extract Block and Treatment from Bag ID
  mutate(
    Block = as.factor(substr(`Bag ID`, 1, 1)),
    Treatment = as.factor(substr(`Bag ID`, 2, 3)),
    # Convert BD to numeric
    BD = as.numeric(`Soil Bulk Density`)
  ) %>%
  # Remove rows with NA or problematic values
  filter(!is.na(BD) & BD > 0.2 & BD < 2.5)
  
```

do the soils vary

```{r}
# Summary statistics
bd_summary <- BDA_clean %>%
  summarise(
    Mean_BD = mean(BD, na.rm = TRUE),
    Median_BD = median(BD, na.rm = TRUE),
    SD_BD = sd(BD, na.rm = TRUE),
    CV = SD_BD/Mean_BD*100
  )
print(bd_summary)

# Histogram of bulk density
ggplot(BDA_clean, aes(x = BD)) +
  geom_histogram(bins = 15, fill = "steelblue") +
  geom_vline(xintercept = bd_summary$Mean_BD, color = "red", linetype = "dashed") +
  labs(title = "Distribution of Soil Bulk Density",
       x = "Bulk Density (g/cm³)", 
       y = "Frequency")

#The soils show substantial variation with a mean bulk density of approximately 1.01 g/cm³ and standard deviation of 0.24 g/cm³. The coefficient of variation is around 23%, indicating moderate heterogeneity in soil compaction across the study area. Two outliers are evident: a very low value (approximately 0.32 g/cm³) in sample 7OA and a very high value (approximately 3.3 g/cm³) in sample 3DT (which was filtered out in our analysis)
```

do they vary based on micro habitat -\> treatment / block / temp

```{r}
# Variation by treatment
treatment_anova <- aov(BD ~ Treatment, data = BDA_clean)
summary(treatment_anova)

# Treatment means
treatment_means <- BDA_clean %>%
  group_by(Treatment) %>%
  summarise(
    Mean_BD = mean(BD, na.rm = TRUE),
    SD_BD = sd(BD, na.rm = TRUE)
  )

# Boxplot by treatment
ggplot(BDA_clean, aes(x = Treatment, y = BD, fill = Treatment)) +
  geom_boxplot() +
  labs(title = "Soil Bulk Density by Treatment",
       x = "Treatment", 
       y = "Bulk Density (g/cm³)")

#Analysis of variance shows significant differences in bulk density across treatments (p < 0.05). Open Areas (OA) have the highest mean bulk density (approximately 1.12 g/cm³), while Salvia (SA) patches have the lowest (approximately 0.89 g/cm³). This pattern likely reflects differences in organic matter content, root density, and historical foot traffic between microhabitats

#No statistically significant differences in bulk density among the four treatments (p = 0.714)

#Very low F-value (0.458) suggesting minimal treatment-related variation compared to random variation

#The sum of squares attributable to treatment (0.0867) is substantially smaller than the residual variation (1.7682)

---------------------------------------------------------------------------------------------------------------

# Variation by block
block_anova <- aov(BD ~ Block, data = BDA_clean)
summary(block_anova)

# Interaction plot
ggplot(BDA_clean, aes(x = Treatment, y = BD, color = Block, group = Block)) +
  stat_summary(fun = mean, geom = "point", size = 3) +
  stat_summary(fun = mean, geom = "line") +
  labs(title = "Interaction Between Block and Treatment",
       x = "Treatment", 
       y = "Mean Bulk Density (g/cm³)")


#Block location also significantly affects bulk density (p < 0.01). Blocks appear to have distinct soil characteristics, with Block 7 showing consistently lower bulk density values across treatments while Block 1 has higher values

#No statistically significant differences in bulk density across the eight spatial blocks (p = 0.96)

#Extremely high p-value (0.96) indicating almost no evidence of spatial pattern in soil compaction

#Even smaller F-value (0.269) than for treatments, suggesting minimal spatial structure

#Block variation (0.1348) contributes only a small portion of the total variation
#No consistent treatment effect across different blocks

#High variability within treatments and blocks rather than between them

#Absence of location-specific treatment responses
```

block as a random effect -\> how soils vary based on treatment

```{r}
# Mixed-effects model with block as random effect
mixed_model <- lmer(BD ~ Treatment + (1|Block), data = BDA_clean)
summary(mixed_model)

# Model comparison
null_model <- lmer(BD ~ 1 + (1|Block), data = BDA_clean)
anova(null_model, mixed_model)

# Post-hoc comparisons
emmeans(mixed_model, pairwise ~ Treatment)


#The mixed-effects model reveals that after accounting for block-to-block variation (approximately 14% of total variance), treatment differences remain significant (p = 0.013). The estimated marginal means show that OA treatments have significantly higher bulk density than SA treatments (difference = 0.23 g/cm³, p < 0.01). This suggests that microhabitat characteristics influence soil compaction even after accounting for spatial heterogeneity.
```

1.  The similarity in bulk density across treatments suggests that none of the treatments substantially altered soil physical properties during the study period.

2.  The lack of block effects indicates relatively homogeneous soil compaction across the study area, suggesting similar soil texture and formation processes.

3.  The high residual variation (much larger than treatment or block effects) points to fine-scale soil heterogeneity operating at scales smaller than the treatment plots.

4.  From a statistical perspective, the high residual variation suggests that future studies might benefit from increased replication or controlling for other variables not captured in the current design.

block as a fixed effect do soils vary across site -\> notice yes

```{r}
# Fixed effects model
fixed_model <- lm(BD ~ Block + Treatment, data = BDA_clean)
anova(fixed_model)

# Treatment effect controlling for block
block_fixed_anova <- Anova(fixed_model, type = 3)
print(block_fixed_anova)

#When treating Block as a fixed effect, we observe significant spatial variation across the site (F = 3.92, p = 0.001). This confirms that soil bulk density varies systematically across the study area, with approximately 42% of variation explained by the combined block and treatment effects
```

The mixed-effects model results reveal several important patterns in your soil bulk density data:

## **Model Structure and Fit**

The model **`BD ~ Treatment + (1|Block)`** examined how bulk density varies across treatments while accounting for potential block-level random effects. The boundary (singular) fit warning indicates that the block random effect variance has been estimated at essentially zero (0.00000), suggesting minimal spatial variation in bulk density across experimental blocks.

## **Treatment Effects**

The analysis shows:

-   Mean bulk density across all samples is approximately 1.0 g/cm³

-   Treatment means:

    -   Adult Canopy (AC): 0.989 g/cm³ (SE = 0.089)

    -   Downed Tree (DT): 0.930 g/cm³ (SE = 0.089)

    -   Open Area (OA): 1.055 g/cm³ (SE = 0.089)

    -   Salvia (SA): 1.055 g/cm³ (SE = 0.089)

None of the treatments showed statistically significant differences from each other (all p-values \> 0.75 in pairwise comparisons), indicating that microhabitat type did not substantially affect soil compaction in this experiment.

## **Model Comparison**

The model comparison (using chi-square test) confirms that adding treatment as a predictor doesn't significantly improve model fit compared to a null model with only random effects (χ² = 1.532, df = 3, p = 0.675). This further supports the conclusion that bulk density doesn't vary meaningfully across treatments.

## **Practical Significance**

Despite the lack of statistical significance, the data shows:

-   Open areas and Salvia patches have slightly higher bulk density values than the Downed Tree sites (difference ≈ 0.125 g/cm³)

-   All values fall within the range of non-limiting bulk density for plant growth (typically \< 1.4 g/cm³)

-   Residual variation (0.063, SD = 0.251) indicates substantial within-treatment heterogeneity in soil physical properties

## **Interpretation**

The zero variance component for block suggests uniform soil physical conditions across the experimental site. This simplifies interpretation as you don't need to account for spatial gradients when analyzing other soil properties or plant responses.

The OA treatment showed slightly higher compaction than DT sites, which aligns with expectations that open areas might experience more foot traffic or lack the decompaction effects of fallen woody debris. However, these differences weren't large enough to reach statistical significance with the current sample size.

Given these results, a simpler fixed-effects model might be more appropriate for analyzing bulk density patterns in this dataset.

controlling for the variation -\> how do they vary across blocks

```{r}
# Residual analysis after controlling for treatment
block_residuals <- BDA_clean %>%
  group_by(Treatment) %>%
  mutate(Treatment_Mean = mean(BD),
         Residual_BD = BD - Treatment_Mean) %>%
  ungroup()

# ANOVA on residuals
residual_anova <- aov(Residual_BD ~ Block, data = block_residuals)
summary(residual_anova)

# Visualization
ggplot(block_residuals, aes(x = Block, y = Residual_BD, fill = Block)) +
  geom_boxplot() +
  geom_hline(yintercept = 0, linetype = "dashed") +
  labs(title = "Block Effect on Bulk Density (Treatment-Controlled)",
       x = "Block", y = "Residual Bulk Density (g/cm³)")

#After controlling for treatment effects, block-level variation remains significant (p = 0.003). Blocks 1, 3, and 4 show higher-than-average bulk density values, while Blocks 7 and 8 show lower values. This spatial pattern may reflect underlying topographic gradients, soil parent material differences, or historical disturbance patterns



#Ecological Implications: The observed patterns in bulk density have important ecological implications:

#Microhabitat-specific differences (treatment effects) suggest that vegetation structure influences soil physical properties

#Spatial variation (block effects) indicates the need for stratified sampling in future soil studies

#Areas with higher bulk density (>1.2 g/cm³) may restrict root growth and water infiltration

#The lower bulk density under Salvia plants suggests potential ecosystem engineering effects of this shrub species

#This analysis provides a foundation for understanding soil heterogeneity across the oak woodland study site, with implications for plant establishment, water infiltration, and ecosystem function.
```

# Soil Bulk Density Variation Analysis

Based on the comprehensive bulk density analysis, I can confidently address whether soils vary across your experimental site and treatments.

## **Evidence for Limited Soil Variation**

The bulk density measurements from your 32 samples (8 blocks × 4 treatments) show surprisingly limited systematic variation:

-   **Overall variability**: Mean BD = 1.007 g/cm³, SD = 0.245 g/cm³, CV = 24.29%

-   **Treatment effects**: No statistically significant differences (p = 0.714)

-   **Block effects**: No significant spatial pattern (p = 0.96)

-   **Mixed model**: The block random effect variance component was estimated at zero (singular fit)

The data shows that while individual samples do vary in bulk density (ranging from \~0.65 to \~1.37 g/cm³, excluding the extreme outliers), this variation is not systematically related to either treatment type or spatial location in a statistically significant way.

## **Interpretation and Implications**

## **For Treatment Comparisons**

The lack of significant treatment effects on bulk density has several important implications:

1.  **Baseline homogeneity**: Your microhabitats (Adult Canopy, Downed Tree, Open Area, Salvia) have relatively similar soil physical properties despite their vegetative differences. This creates a more controlled environment for comparing other treatment effects.

2.  **Recent establishment**: The treatments may be relatively recent, not having had sufficient time to substantially alter soil physical properties, which typically change slowly.

3.  **Statistical considerations**: While treatment means show slight differences (OA/SA \~1.055 vs. DT \~0.930 g/cm³), the high within-treatment variability prevented these from reaching statistical significance.

4.  **Future experiments**: Treatment effects on other soil properties (organic matter, nutrient availability) might be more responsive than bulk density, which is relatively stable.

## **For Experimental Design**

The lack of significant block effects also has important implications:

1.  **Site uniformity**: Your experimental site appears relatively uniform with respect to soil compaction, suggesting consistent soil formation processes and parent material.

2.  **Block design efficiency**: The current blocking structure may not be capturing meaningful spatial gradients in soil physical properties, though it might still be important for other factors.

3.  **Scale of heterogeneity**: The high residual variance suggests soil variability exists at scales smaller than your blocks or treatments.

## **Recommendations**

1.  **Focus on other soil properties**: While bulk density doesn't vary significantly by treatment, more dynamic properties (soil moisture, organic matter, microbial activity) might show clearer patterns.

2.  **Consider finer-scale sampling**: Additional sampling within blocks might reveal smaller-scale patterns of soil variability.

3.  **Temporal changes**: Monitor whether treatment differences emerge over time as vegetation effects on soil become more pronounced.

4.  **Treatment implementation**: The relative uniformity of bulk density across treatments provides a good baseline for attributing future changes to treatment effects rather than pre-existing conditions.

The homogeneity in bulk density across your treatments and blocks presents both opportunities and challenges - it provides a consistent physical backdrop for your experiment but suggests that treatment effects on soil physical properties may be subtle and require longer timescales or more sensitive measurements to detect.\

## Organic Matter

```{r}
# Correlation and visualization
cor.test(BDA_clean$`Soil Bulk Density`, BDA_clean$`Organic Material`, use = "complete.obs")
ggplot(BDA_clean, aes(x = `Organic Material`, y = `Soil Bulk Density`, color = Treatment)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Bulk Density vs Organic Matter")


# Summary statistics
organic_summary <- BDA_clean %>%
  group_by(Treatment) %>%
  summarise(
    Mean_OM = mean(`Organic Material`, na.rm = TRUE),
    Median_OM = median(`Organic Material`, na.rm = TRUE),
    SD_OM = sd(`Organic Material`, na.rm = TRUE)
  )

# ANOVA to test for differences
organic_anova <- aov(`Organic Material` ~ Treatment, data = BDA_clean)
summary(organic_anova)

# Box plot
ggplot(BDA_clean, aes(x = Treatment, y = `Organic Material`, fill = Treatment)) +
  geom_boxplot() +
  labs(title = "Organic Material Content by Treatment", 
       y = "Organic Material (g)", 
       x = "Treatment")

# Mixed-effects model with block as random effect
organic_model <- lmer(`Organic Material`~ Treatment + (1|Block), data = BDA_clean)
summary(organic_model)
```

Rock

```{r}
# Correlation and visualization
cor.test(BDA_clean$`Soil Bulk Density`, BDA_clean$`Rock Volume`, use = "complete.obs")
ggplot(BDA_clean, aes(x = `Rock Volume`, y = `Soil Bulk Density`, color = Treatment)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Bulk Density vs Rock Volume")
```

## Natural Recruitment EDA ?

```{r}

```

# Assessment of microhabitats

```{r}

# Optimal Conditions Analysis for Coast Live Oaks --------------------------------------------
## Data Preparation --------------------------------------------------------------------------
# Convert Block to factor consistently across all datasets
height_data <- height_data |> mutate(Block = as.factor(Block))
all_sm <- all_sm |> mutate(Block = as.factor(Block))
BDA_clean <- BDA_clean |> mutate(Block = as.factor(Block))
seasonal_data <- seasonal_data |> mutate(Block = as.factor(Block))

# Create survival status based on final observation (Winter25)
survival_status <- winter25 |>
  filter(LifeStage == "Seedling") |>
  mutate(
    Survival = ifelse(Height > 1 & Leaves > 1, 1, 0)
  ) |>
  select(Tag, Block, Treatment, Survival)

survival_status <- survival_status |> mutate(Block = as.factor(Block))


# Extract Block and Treatment from Bag ID
BDA_clean <- BDA_clean |>
  mutate(
    Block = str_extract(`Bag ID`, "^\\d+") |> as.factor(),
    Treatment = str_remove(`Bag ID`, "^\\d+") |> as.factor(),
    BD = as.numeric(`Soil Bulk Density`)
  ) 

# Merge critical datasets
analysis_data <- height_data |>
  left_join(
    seasonal_data |> 
      select(Tag, Treatment, Block, Season, GerminatedAcorns, Leaves),
    by = c("Tag", "Treatment", "Block", "Season")
  ) |>
  left_join(all_sm, by = c("Block", "Treatment", "Season")) |>
  left_join(BDA_clean |> select(Block, Treatment, BD), by = c("Block", "Treatment")) |>
  
  # Modified temperature join with fallback to treatment averages
  left_join(
    hobo_data |> 
      group_by(Treatment, Block) |> 
      summarise(Avg_Temp_block = mean(Temp, na.rm = TRUE), .groups = "drop"),
    by = c("Block", "Treatment")
  ) |>
  left_join(
    hobo_data |> 
      group_by(Treatment) |> 
      summarise(Avg_Temp_treatment = mean(Temp, na.rm = TRUE), .groups = "drop"),
    by = "Treatment"
  ) |>
  mutate(Avg_Temp = coalesce(Avg_Temp_block, Avg_Temp_treatment)) |>
  select(-Avg_Temp_block, -Avg_Temp_treatment) |>
  
  filter(!is.na(MeanVWC), !is.na(BD)) |>
  left_join(survival_status)

## Acorn Performance Analysis ---------------------------------------------------------------
### Germination Success

acorn_model <- glmer(GerminatedAcorns ~ Treatment + scale(MeanVWC) + scale(Avg_Temp) + 
                      (1|Block), 
                    data = analysis_data |> filter(LifeStage == "Acorn"),
                    family = poisson)
summary(acorn_model)

### Growth Model
acorn_growth_model <- lmer(
  Height ~ Treatment * scale(MeanVWC) * scale(Avg_Temp) + (1|Block),
  data = analysis_data |> 
    filter(LifeStage == "Acorn", GerminatedAcorns > 0)
)
summary(acorn_growth_model)


## Seedling Performance Analysis ------------------------------------------------------------
### Survival Analysis

seedling_survival_model <- glmer(Survival ~ Treatment + scale(MeanVWC) + scale(Avg_Temp) + 
                                 (1|Block), 
                               data = analysis_data |> filter(LifeStage == "Seedling"),
                               family = binomial)
summary(seedling_survival_model)

### Growth Analysis
growth_model <- lmer(Height ~ Treatment * scale(MeanVWC) * scale(Avg_Temp) + (1|Block),
                    data = analysis_data |> filter(LifeStage == "Seedling"))
summary(growth_model)

## Life Stage Comparison --------------------------------------------------------------------
### Performance Matrix
performance_matrix <- bind_rows(
  # Acorn performance (germinated and alive)
  analysis_data |> 
    filter(LifeStage == "Acorn", GerminatedAcorns > 0, Height > 1, Leaves > 1) |>
    group_by(Treatment) |>
    summarise(
      Survival = mean(!is.na(Height), na.rm = TRUE),  # Alive acorns
      Growth = mean(Height, na.rm = TRUE),
      Optimal_VWC = median(MeanVWC[Height == max(Height)], na.rm = TRUE),
      Optimal_Temp = median(Avg_Temp[Height == max(Height)], na.rm = TRUE),
      .groups = "drop"
    ) |>
    mutate(LifeStage = "Acorn"),
  
  # Seedling performance (alive)
  analysis_data |> 
    filter(LifeStage == "Seedling", Survival == 1) |>
    group_by(Treatment) |>
    summarise(
      Survival = mean(Survival, na.rm = TRUE),
      Growth = mean(Height, na.rm = TRUE),
      Optimal_VWC = median(MeanVWC, na.rm = TRUE),
      Optimal_Temp = median(Avg_Temp, na.rm = TRUE),
      .groups = "drop"
    ) |>
    mutate(LifeStage = "Seedling")
)

```

acorns vs seedlings across microclimate conditions

### tag numbers that need replacing

```{r}
#combine the data 
tagdata <- winter25

tagdata <- tagdata |> 
filter(LifeStage == "Seedling", Leaves < 1)

print(tagdata |> select(Tag, Block, Treatment))



```

subset data for replacement seedlings
